{"version":3,"sources":["components/Tile.jsx","components/Board.jsx","components/GameSelect.jsx","components/MenuOverlay.jsx","components/Display.jsx","components/Game.jsx","App.js","serviceWorker.js","index.js"],"names":["Tile","props","row","col","isFlagged","isMine","isRevealed","handleTile","mineCount","setOffMine","gameRows","tileStyle","border","revealedTile","backgroundColor","hitMineStyle","style","tileSize","sizeObj","width","height","setStyle","className","onClick","handleClick","src","alt","Board","board","length","map","r","key","c","GameSelect","raiseNewGame","handleHide","useState","gameChoice","setGameChoice","easy","intermediate","expert","custom","selection","setSelection","customW","customH","customBombs","customObj","setCustom","handleCustom","e","title","target","id","numb","Number","value","Form","onChange","choice","selections","Object","keys","includes","newSelections","forEach","s","Label","Row","Col","Check","type","label","checked","Control","min","max","Button","variant","preventDefault","gameObj","mines","MenuOverlay","show","setShow","useRef","ref","Overlay","current","trigger","placement","rootClose","onHide","Popover","Content","handleNewGame","Display","gameStarted","gameOver","gameWon","Game","initBoard","w","h","push","plantMines","count","Math","floor","random","state","tile","revealBombs","setState","newBoard","revealEmpties","console","log","revealed","getRevealedCount","getNeighbors","neighbors","filter","showOverlay","this","Component","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.a85f0ee3.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Tile = (props) => {\n  const {\n    row,\n    col,\n    isFlagged,\n    isMine,\n    isRevealed,\n    handleTile,\n    mineCount,\n    setOffMine,\n    gameRows,\n  } = props;\n\n  const tileStyle = { border: \"1px solid darkgray\" };\n  const revealedTile = { ...tileStyle, backgroundColor: \"lightgray\" };\n  const hitMineStyle = { ...tileStyle, backgroundColor: \"red\" };\n  const handleClick = (row, col) => {\n    handleTile(row, col);\n  };\n\n  const setStyle = () => {\n    let tileSize;\n    gameRows > 14 ? (tileSize = \"30px\") : (tileSize = \"45px\");\n    const sizeObj = { width: tileSize, height: tileSize };\n    if (setOffMine) return { ...hitMineStyle, ...sizeObj };\n    if (isRevealed) return { ...revealedTile, ...sizeObj };\n    return { ...tileStyle, ...sizeObj };\n  };\n  return (\n    <td\n      style={setStyle()}\n      backgroundColor={setOffMine ? \"red\" : \"\"}\n      className={isRevealed ? \"tile-tile-revealed\" : \"tile-unrevealed\"}\n      onClick={() => handleClick(row, col)}\n    >\n      {isFlagged ? (\n        <img src=\"flag.png\" alt=\"flag\" className=\"flag-img\" />\n      ) : null}\n      {isMine && isRevealed ? (\n        <img src=\"minesweeper_bomb.png\" alt=\"bomb\" className=\"mine-img\" />\n      ) : null}\n      {isRevealed && mineCount ? mineCount : null}\n    </td>\n  );\n};\n\nexport default Tile;\n","import React from \"react\";\nimport Tile from \"./Tile\";\n\nconst Board = (props) => {\n  const { board, handleTile, mineCount } = props || { board: [] };\n  return (\n    <section>\n      <table className=\"board-container\">\n        <tbody>\n          {!board.length && <h5>Pick a Game</h5>}\n          {board.length > 0 &&\n            board.map((row, r) => {\n              return (\n                <tr key={row + r}>\n                  {row.map((col, c) => {\n                    return (\n                      <Tile\n                        key={`${r}-${c}`}\n                        {...col}\n                        handleTile={handleTile}\n                        gameRows={board.length}\n                      />\n                    );\n                  })}\n                </tr>\n              );\n            })}\n        </tbody>\n      </table>\n    </section>\n  );\n};\n\nexport default Board;\n","import React, { useState } from \"react\";\nimport { Form, Row, Col, Button, Popover } from \"react-bootstrap\";\n\nfunction GameSelect(props) {\n  const { raiseNewGame, handleHide } = props;\n  const [gameChoice, setGameChoice] = useState(\"easy\");\n  const [selection, setSelection] = useState({\n    easy: false,\n    intermediate: false,\n    expert: false,\n    custom: false,\n  });\n  const [customObj, setCustom] = useState({\n    customW: 9,\n    customH: 9,\n    customBombs: 9,\n  });\n\n  const handleChange = (e) => {\n    const choice = e.target.id;\n    const selections = Object.keys(selection);\n    if(!selections.includes(choice)) return null;\n    const newSelections = {};\n    selections.forEach((s) => (newSelections[s] = false));\n    newSelections[choice] = true;\n    setGameChoice(choice);\n    setSelection({ ...newSelections });\n  };\n\n  const handleCustom = (e) => {\n    const title = e.target.id;\n    const numb = Number(e.target.value);\n    setCustom({ ...customObj, [title]: numb });\n  };\n\n  const handleNewGame = (e) => {\n    e.preventDefault();\n    const settings = {\n      easy: { width: 9, height: 9, mines: 10 },\n      intermediate: { width: 16, height: 16, mines: 40 },\n      expert: { width: 30, height: 16, mines: 99 },\n    };\n    let gameObj = {};\n    if (gameChoice !== \"custom\") {\n      gameObj = { ...settings[gameChoice] };\n    } else {\n      gameObj = {\n        width: customObj.customW,\n        height: customObj.customH,\n        mines: customObj.customBombs,\n      };\n    }\n    raiseNewGame(gameObj);\n    handleHide();\n  };\n\n  return (\n    <Form onChange={handleChange} className=\"game-menu\">\n      <Form.Label className=\"menu-label\">Select Game Size: </Form.Label>\n      <Form.Row>\n        <Col></Col>\n        <Col>Height</Col>\n        <Col>Width</Col>\n        <Col>Mines</Col>\n      </Form.Row>\n      <Form.Row>\n        <Col>\n          <Form.Check\n            type={\"radio\"}\n            id=\"easy\"\n            label=\"Easy\"\n            checked={selection.easy}\n          />\n        </Col>\n        <Col>9</Col>\n        <Col>9</Col>\n        <Col>10</Col>\n      </Form.Row>\n      <Form.Row>\n        <Col>\n          <Form.Check\n            type={\"radio\"}\n            id=\"intermediate\"\n            label=\"Intermediate\"\n            checked={selection.intermediate}\n          />\n        </Col>\n        <Col>16</Col>\n        <Col>16</Col>\n        <Col>40</Col>\n      </Form.Row>\n      <Form.Row>\n        <Col>\n          <Form.Check\n            type={\"radio\"}\n            id=\"expert\"\n            label=\"Expert\"\n            checked={selection.expert}\n          />\n        </Col>\n        <Col>16</Col>\n        <Col>30</Col>\n        <Col>99</Col>\n      </Form.Row>\n      <Form.Row>\n        <Col>\n          <Form.Check\n            type={\"radio\"}\n            id=\"custom\"\n            label=\"Custom\"\n            checked={selection.custom}\n          />\n        </Col>\n        <Col>\n          <Form.Control\n            type=\"number\"\n            id=\"customH\"\n            min={9}\n            max={50}\n            value={customObj.customH}\n            onChange={handleCustom}\n          />\n        </Col>\n        <Col>\n          <Form.Control\n            type=\"number\"\n            id=\"customW\"\n            min={9}\n            max={50}\n            value={customObj.customW}\n            onChange={handleCustom}\n          />\n        </Col>\n        <Col>\n          <Form.Control\n            type=\"number\"\n            id=\"customBombs\"\n            min={9}\n            max={50}\n            value={customObj.customBombs}\n            onChange={handleCustom}\n          />\n        </Col>\n      </Form.Row>\n      <div className=\"new-game-button\">\n      <Button variant=\"secondary\" onClick={handleNewGame}>New Game</Button>\n      </div>\n    </Form>\n  );\n}\n\nexport default GameSelect;\n","import React, { useRef, useState } from \"react\";\nimport GameSelect from \"./GameSelect\";\nimport { Overlay, Button, Popover } from \"react-bootstrap\";\n\nfunction MenuOverlay(props) {\n  const [show, setShow] = useState(false);\n  const target = useRef(null);\n  const handleHide = () => {\n    setShow(!show);\n  };\n  return (\n    <>\n      <Button variant=\"info\" ref={target} onClick={() => setShow(!show)}>\n        Game Menu\n      </Button>\n      <Overlay\n        target={target.current}\n        show={show}\n        trigger=\"click\"\n        key=\"bottom\"\n        placement=\"bottom\"\n        rootClose\n        onHide={handleHide}\n      >\n        <Popover>\n          <Popover.Content>\n            <GameSelect\n              handleHide={handleHide}\n              raiseNewGame={props.handleNewGame}\n            />\n          </Popover.Content>\n        </Popover>\n      </Overlay>\n    </>\n  );\n}\n\nexport default MenuOverlay;\n","import React from 'react';\n\nconst Display = (props) => {\n  const {gameStarted, gameOver, gameWon} = props;\n  return (\n    <section>\n      {gameStarted && !gameOver && <h5>Happy Mining!</h5>}\n      {gameWon && <h5>You Win!!</h5>}\n      {gameOver && !gameWon && <h5>Game Over</h5>}\n    </section>\n  );\n}\n\nexport default Display;\n","import React, { Component } from \"react\";\nimport Board from \"./Board\";\nimport MenuOverlay from \"./MenuOverlay\";\nimport Display from \"./Display\";\n\nclass Game extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      board: [],\n      width: 9,\n      height: 9,\n      mines: 9,\n      gameStarted: false,\n      gameOver: false,\n      gameWon: false,\n      showOverlay: false,\n    };\n  }\n\n  initBoard = (w, h) => {\n    const board = [];\n    for (let r = 0; r < h; r++) {\n      board.push([]);\n      for (let c = 0; c < w; c++) {\n        board[r][c] = {\n          row: r,\n          col: c,\n          isMine: false,\n          isRevealed: false,\n          isFlagged: false,\n          mineCount: null,\n          setOffMine: false,\n        };\n      }\n    }\n    return board;\n  };\n\n  plantMines = (board, w, h, mines) => {\n    let count = 0;\n    while (count < mines) {\n      let row = Math.floor(Math.random() * h);\n      let col = Math.floor(Math.random() * w);\n      if (board[row][col].isMine === false) {\n        board[row][col].isMine = true;\n        count++;\n      }\n    }\n  };\n\n  handleTile = (row, col) => {\n    if (this.state.gameOver) return;\n    const tile = { ...this.state.board[row][col] };\n\n    if (tile.isMine) {\n      this.state.board[row][col].setOffMine = true;\n      this.revealBombs(this.state.board);\n      this.setState({ gameOver: true });\n      return;\n    }\n    if (!tile.isMine) {\n      const newBoard = this.state.board.map((r) => {\n        return r.map((c) => {\n          return c;\n        });\n      });\n      this.revealEmpties(newBoard, row, col);\n      console.log(\"the new board is \", newBoard);\n      this.setState({ board: newBoard });\n      const revealed = this.getRevealedCount(newBoard);\n      const totalEmpty =\n        this.state.width * this.state.height - this.state.mines;\n      if (totalEmpty === revealed) {\n        this.setState({ gameOver: true, gameWon: true });\n      }\n    }\n  };\n\n  getNeighbors = (board, row, col) => {\n    const neighbors = [];\n    for (let r = row - 1; r <= row + 1; r++) {\n      if (r < 0 || r >= this.state.height) continue;\n      for (let c = col - 1; c <= col + 1; c++) {\n        if (c < 0 || c >= this.state.width) continue;\n        let tile = board[r][c];\n        if (tile) {\n          neighbors.push(tile);\n        }\n      }\n    }\n    return neighbors;\n  };\n\n  revealEmpties = (board, row, col) => {\n    // starts on non-mine tile but can run recursively on mine tile\n    const current = board[row][col];\n    if (current.isMine || current.isRevealed) return;\n\n    current.isRevealed = true;\n    current.isFlagged = false;\n\n    let neighbors = this.getNeighbors(board, row, col);\n    let mines = neighbors.filter((tile) => tile.isMine).length;\n    if (mines === 0) {\n      neighbors.forEach((tile) =>\n        this.revealEmpties(board, tile.row, tile.col)\n      );\n    } else {\n      current.mineCount = mines;\n    }\n  };\n\n  revealBombs = (board) => {\n    board.forEach((row) => {\n      row.forEach((tile) => {\n        if (tile.isMine) {\n          tile.isRevealed = true;\n        }\n      });\n    });\n  };\n\n  getRevealedCount = (board) => {\n    let revealed = 0;\n    board.forEach((row) => {\n      row.forEach((tile) => {\n        if (tile.isRevealed) {\n          revealed++;\n        }\n      });\n    });\n    return revealed;\n  };\n\n  handleNewGame = (gameObj) => {\n    const board = this.initBoard(gameObj.width, gameObj.height);\n    this.plantMines(board, gameObj.width, gameObj.height, gameObj.mines);\n    this.setState({ ...gameObj, board, gameOver: false, gameStarted: true });\n  };\n\n  render() {\n    const { board, gameStarted, gameOver, gameWon } = this.state;\n    return (\n      <section>\n        <MenuOverlay handleNewGame={this.handleNewGame} />\n        <Display {...{ gameStarted, gameWon, gameOver }} />\n        <Board board={board} handleTile={this.handleTile} />\n      </section>\n    );\n  }\n}\n\nexport default Game;\n","import React from 'react';\nimport Game from \"./components/Game\";\nimport './App.css';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <h5>MineSweeper</h5>\n      <Game />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}